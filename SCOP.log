-------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\dethi\Documents\GitHub\SCOPGitHub\SCOP.log
  log type:  text
 opened on:  17 Aug 2018, 11:51:52

. log on
(log already on)

.  
. use scop.dta

. ssc install xtoverid
checking xtoverid consistency and verifying not already installed...
all files already exist and are up to date.

. ssc install ranktest 
checking ranktest consistency and verifying not already installed...
all files already exist and are up to date.

. capt ssc inst estout

. 
end of do-file

. do "C:\Users\dethi\AppData\Local\Temp\STD27fc_000000.tmp"

. // -----------------------------------------------------------------------------
.                                         ***PREPARING VARIABLES***
. //------------------------------------------------------------------------------
. * re-labelling variables
.         label variable annee_creation "year of creation"

.         label variable type_creation "Type of creation"

.         label variable naf10lib "sector"

.         label variable catjur "legal form"

.         label variable salaries "number of employees"

.         label variable societaires_salaries "numbers of employees members of the co
> op"

.         label variable societaires "number of member of the coop"

.         label variable effectif_moyen "average workforce"

.         label variable capital_social_ou_individuel "capital"

.         label variable total_capitaux_propres "equity"

.         label variable tota_capital_salaris_associs "capital owned by workers"

.         label variable rserves_lgales "legal reserves"

.         label variable rserves_lgales "year allocation to legal reserves"

.         label variable fonds_de_dveloppement "year allocation to fons de dvp"

.         label variable dividende "dividend (only to member)"

.         label variable part_travail_non_affect_partic "year distrbituion of profir 
> to worker not for partitipcation"

.         label variable part_travail_deuxieme_dot_partic "year distrbituion of profi
> r to worker for partitipcation"

.         label variable ca_net_total "ca"

.         label variable valeur_ajoutee_bdf "added value"

.         rename part_travail_non_affect_partic interessement

.         rename part_travail_deuxieme_dot_partic participation

. 
. 
. * Building new continuous variables 
.         
.         *age
.         gen age = year - annee_creation

.         
.         *V: the gross added value of the SCOP, in euro;
.         rename valeur_ajoutee_bdf V

.         label variable V "gross added value of the SCOP, in euro"

.         gen lnV = ln(V)
(702 missing values generated)

.         
.         *L: the average number of employees in the SCOP;
.         rename effectif_moyen L

.         drop if L == .
(25 observations deleted)

.         gen lnL = ln(L)
(29 missing values generated)

.         
.         *K: the total equity of the SCOP, i.e. the sum of capital shares, legal and
>  statutory reserves, retained earnings (that is to say, the net surplus from previo
> us years retained and not allocated to reserves) and the profit for the year, in eu
> ro;
.         rename total_capitaux_propres K

.         drop if capital_social_ou_individuel == .
(653 observations deleted)

.         gen lnK = ln(K)
(555 missing values generated)

.                 *According to the law, the capital can not be less than 30 € in the
>  SARL and 18 500 € in the SA.
.                 drop if capital_social_ou_individuel < 30 & catjur == "Société à re
> sponsabilité limitée (SARL)"
(0 observations deleted)

.                 drop if capital_social_ou_individuel < 18500 & catjur == "Société a
> nonyme à conseil d'administration"
(0 observations deleted)

.         
.         *LS: the proportion of workers who are co-owners/shareholders of the SCOP, 
> in percentage;  
.         gen LS =  societaires_salaries / salaries
(1 missing value generated)

.         drop if LS == .
(1 observation deleted)

.         label variable LS "the proportion of workers who are co-owners/shareholders
>  of the SCOP, in percentage"
note: label truncated to 80 characters

.         
.         *KLS: the average capital shares held by member-workers, in euro;
.         gen KLS = tota_capital_salaris_associs / societaires_salaries  
(170 missing values generated)

.         replace KLS = . if KLS < 0 
(0 real changes made)

.         label variable KLS "the average capital shares held by member-workers, in e
> uro"

.                 *is it possible to have a scop with no capital held by workers? I w
> ould say that it is impossible
.                 drop if tota_capital_salaris_associs == .
(170 observations deleted)

.                 
.         *COKLS: the share of net operating surplus allocated to collective reserves
> , namely the legal reserve and the development funds, per member-workers, in euro;
.         gen CO = rserves_lgales + fonds_de_dveloppement
(2,873 missing values generated)

.         replace CO = 0 if CO == .
(2,873 real changes made)

.         gen COKLS = (rserves_lgales + fonds_de_dveloppement)/ societaires_salaries
(2,873 missing values generated)

.         replace COKLS = 0 if COKLS == .
(2,873 real changes made)

.         label variable COKLS "the share of net operating surplus allocated to colle
> ctive reserves, namely the legal reserve and the development funds, per member-work
> ers, in euro"
note: label truncated to 80 characters

.         
.         *PARTL: the share of net operating surplus allocated to workers, members or
>  not, per worker, in euro.
.         replace interessement = 0 if interessement == .
(3,931 real changes made)

.         replace participation = 0 if participation == .
(2,192 real changes made)

.         gen PARTL = (interessement + participation)  / societaires_salaries 

.         label variable PARTL "the share of net operating surplus allocated to worke
> rs, members or not, per worker, in euro"
note: label truncated to 80 characters

. 
. * Building new binary variables 
. 
.         /* Methods of creation
>         The following binary variables take the value "1" when the cooperative belo
> ngs to this category, "0" otherwise.
>         Founding methods
>         There are four methods to found a SCOP:
>         -       EXNIHILO: the company started under the SCOP form;
>         -       REANIM: the company was operating under a different legal form from
>  SCOP, temporarily ceased its activities and restarted under the SCOP form;
>         -       TRANSFO: the company was operating under a different legal form fro
> m SCOP and has been transformed into a SCOP without a cease of its activities;
>         -       TRANSMI: the company was operating under a different legal form fro
> m SCOP and has been transformed into a SCOP when the owner passed it down to the wo
> rkers.*/
.         gen exnihilo = 1 if type_creation == "Ex nihilo"
(1,523 missing values generated)

.         replace exnihilo = 0 if exnihilo == .
(1,523 real changes made)

.         label variable exnihilo "the company started under the SCOP form"

. 
.         gen reanim = 1 if type_creation == "RÂŽanimation"
(4,423 missing values generated)

.         replace reanim = 0 if reanim == .
(4,423 real changes made)

.         label variable reanim "the company was operating under a different legal fo
> rm from SCOP, temporarily ceased its activities and restarted under the SCOP form"
note: label truncated to 80 characters

. 
.         gen transf = 1 if type_creation == "Transformation"
(4,236 missing values generated)

.         replace transf = 0 if transf == .
(4,236 real changes made)

.         label variable transf "the company was operating under a different legal fo
> rm from SCOP and has been transformed into a SCOP without a cease of its activities
> "
note: label truncated to 80 characters

. 
.         gen transmi = 1 if type_creation == "Transmission"
(3,817 missing values generated)

.         replace transmi = 0 if transmi == .
(3,817 real changes made)

.         label variable transmi "the company was operating under a different legal f
> orm from SCOP and has been transformed into a SCOP when the owner passed it down to
>  the workers"
note: label truncated to 80 characters

. 
.         /*Regions       
>         We chose the Nomenclature of Territorial Units for Statistics (NUTS), 
>         Level 1, to classify SCOP according to their region. According to this nome
> nclature, 
>         France is divided between eight spatial planning economic zones and a ninth
>  zone containing the overseas departments. 
>         Nine binary variables thus reflect these geographical zones.*/
.         gen FR4=1 if region =="ALSACE"
(4,329 missing values generated)

.         gen FR6=1 if region =="AQUITAINE"
(4,176 missing values generated)

.         gen FR7=1 if region =="AUVERGNE"
(4,326 missing values generated)

.         gen FR2=1 if region =="BASSE-NORMANDIE"
(4,316 missing values generated)

.         replace FR2=1 if region =="BOURGOGNE"
(130 real changes made)

.         gen FR5=1 if region =="BRETAGNE"
(4,029 missing values generated)

.         replace FR2=1 if region =="CENTRE"
(66 real changes made)

.         replace FR2=1 if region =="CHAMPAGNE-ARDENNE"
(60 real changes made)

.         gen FR8=1 if region =="CORSE"
(4,412 missing values generated)

.         replace FR4=1 if region =="FRANCHE-COMTE"
(41 real changes made)

.         gen FR9=1 if region =="GUADELOUPE"
(4,422 missing values generated)

.         replace FR9=1 if region =="GUYANE"
(2 real changes made)

.         replace FR2=1 if region =="HAUTE-NORMANDIE"
(58 real changes made)

.         gen FR1=1 if region =="ILE-DE-FRANCE"
(3,931 missing values generated)

.         replace FR9=1 if region =="LA REUNION"
(11 real changes made)

.         replace FR8=1 if region =="LANGUEDOC-ROUSSILLON"
(177 real changes made)

.         replace FR6=1 if region =="LIMOUSIN"
(101 real changes made)

.         replace FR4=1 if region =="LORRAINE"
(81 real changes made)

.         replace FR9=1 if region =="MARTINIQUE"
(2 real changes made)

.         replace FR9=1 if region =="MAYOTTE"
(0 real changes made)

.         replace FR6=1 if region =="MIDI-PYRENEES"
(292 real changes made)

.          gen FR3=1 if region =="NORD-PAS-DE-CALAIS"
(4,210 missing values generated)

.         replace FR5=1 if region =="PAYS DE LA LOIRE"
(353 real changes made)

.         replace FR2=1 if region =="PICARDIE"
(53 real changes made)

.         replace FR5=1 if region =="POITOU-CHARENTES"
(209 real changes made)

.         replace FR8=1 if region =="PROVENCE-ALPES-COTE D'AZUR"
(451 real changes made)

.         replace FR7=1 if region =="RHONE-ALPES"
(680 real changes made)

. 
.         replace FR1 = 0 if FR1 == .
(3,931 real changes made)

.         replace FR2 = 0 if FR2 == .
(3,949 real changes made)

.         replace FR3 = 0 if FR3 == .
(4,210 real changes made)

.         replace FR4 = 0 if FR4 == .
(4,207 real changes made)

.         replace FR5 = 0 if FR5 == .
(3,467 real changes made)

.         replace FR6 = 0 if FR6 == .
(3,783 real changes made)

.         replace FR7 = 0 if FR7 == .
(3,646 real changes made)

.         replace FR8 = 0 if FR8 == .
(3,784 real changes made)

.         replace FR9 = 0 if FR9 == .
(4,407 real changes made)

. 
. 
.         /* Fields of activity
>         We chose to keep the same classification as the one used by the CG-Scop. Th
> e latter is based on the French Activities Nomenclature (NAF) rev. 2, 2008 and clas
> sifies the SCOP in eight fields of activity/ industries:
>         -       AGR: Agriculture, forestry and fishing
>         -       INDUEX: Extractive industry, energy, water and waste management
>         -       INDUMA: Manufacturing industry
>         -       CONSTRU: Construction industry
>         -       COM: Trade, automobile and motorcycle repairs
>         -       TRANS: Transportation and storage
>         -       SERV: Service industry including: Accommodation and restaurant; Inf
> ormation and communication; Financial and insurance activities; Real estate activit
> ies; Specialized, scientific and technical services; Administrative services and su
> pport activities, Arts, entertainment and recreation activities; Other service acti
> vities.
>         -       EDU: Education, health and social work sector.*/
.         gen AGR = 1 if naf10lib == "Agriculture, sylviculture et pÂche"
(4,423 missing values generated)

.         replace AGR = 0 if AGR == .
(4,423 real changes made)

.         gen COM = 1 if naf10lib == "Commerce"
(4,108 missing values generated)

.         replace COM = 0 if COM == .
(4,108 real changes made)

.         gen CONSTRU = 1 if naf10lib == "Construction"
(3,321 missing values generated)

.         replace CONSTRU = 0 if CONSTRU == .
(3,321 real changes made)

.         gen EDU = 1 if naf10lib == "Education, santÂŽ et action sociale"
(4,423 missing values generated)

.         replace EDU = 0 if EDU == .
(4,423 real changes made)

.         gen INDUEX = 1 if naf10lib == "Industrie extractive, ÂŽnergie, eau et dÂŽch
> ets"
(4,423 missing values generated)

.         replace INDUEX = 0 if INDUEX == .
(4,423 real changes made)

.         gen INDUMA = 1 if naf10lib == "Industrie manufacturiÂre"
(4,423 missing values generated)

.         replace INDUMA = 0 if INDUMA == .
(4,423 real changes made)

.         gen SERV = 1 if naf10lib == "Services"
(2,759 missing values generated)

.         replace SERV = 0 if SERV == .
(2,759 real changes made)

.         gen TRANS = 1 if naf10lib == "Transports"
(4,282 missing values generated)

.         replace TRANS = 0 if TRANS == .
(4,282 real changes made)

. 
.         label variable AGR "Agriculture, sylviculture et pÂche" 

.         label variable COM "Commerce" 

.         label variable CONSTRU "Construction" 

.         label variable EDU "Education, santÂŽ et action sociale" 

.         label variable INDUEX "Industrie extractive, ÂŽnergie, eau et dÂŽchets" 

.         label variable INDUMA "Industrie manufacturiÂre" 

.         label variable SERV "Services" 

.         label variable TRANS "Transports"  

. 
.         /* Legal forms
>         SCOP can choose between the legal form of Limited Liability Company  or Pub
> lic Limited Company  (with a board of directors or with an executive board). 
>         SARL variable takes the value "1" when the SCOP operates under the legal fo
> rm of Limited Liability Company and "0" when the SCOP works under the legal form Pu
> blic Limited Company.*/
.         gen SARL = 1 if catjur == "Société à responsabilité limitée (SARL)"
(4,423 missing values generated)

.         replace SARL = 0 if SARL == .
(4,423 real changes made)

.         label variable SARL "SARL when 1/ SA when 0"

. 
.         *Size
.         gen SMALL = 1 if L < 10
(1,924 missing values generated)

.         replace SMALL = 0 if SMALL == .
(1,924 real changes made)

. 
.         gen MEDIUM = 1 if L >= 10 & L <50
(2,902 missing values generated)

.         replace MEDIUM = 0 if MEDIUM == .
(2,902 real changes made)

. 
.         gen LARGE = 1 if L >= 50
(4,020 missing values generated)

.         replace LARGE = 0 if LARGE == .
(4,020 real changes made)

. 
.         *Life of the SCOP*
.         //tostring annee_creation, replace
.         //gen start = date(annee_creation, "Y") 
.         //format start %td
.         //tostring annee_radiation, replace
.         //gen end = date(annee_radiation, "Y") 
.         //format end %td
.         gen bankrupt = 1 if (year+1) == annee_radiation |(year+2) == annee_radiatio
> n | (year+3) == annee_radiation
(4,057 missing values generated)

.         replace bankrupt = 0 if bankrupt == .
(4,057 real changes made)

.         label variable bankrupt "1 if SCOP has known bankruptcy, 0 otherwise"

.         
.         tostring year, replace
year was int now str4

.         gen date = date(year, "Y") 

.         format date %td

.         
.         *snapspan idvar time_var instantaneous_vars, generate(new_begin_date)
.         snapspan id date bankrupt, generate (time0) replace
note:  724 obs. (34.2%) have only a single record; they will be ignored

. 
end of do-file

. sort id year

. rename date time1

. stset date, failure(bankrupt == 1) id(id)
variable date not found
r(111);

. stset time1, failure(bankrupt == 1) id(id)

                id:  id
     failure event:  bankrupt == 1
obs. time interval:  (time1[_n-1], time1]
 exit on or before:  failure

------------------------------------------------------------------------------
      4,423  total observations
          0  exclusions
------------------------------------------------------------------------------
      4,423  observations remaining, representing
      2,114  subjects
        366  failures in single-failure-per-subject data
   39356006  total analysis time at risk and under observation
                                                at risk from t =         0
                                     earliest observed entry t =         0
                                          last observed exit t =    18,993

. stset time1, failure(bankrupt == 1) id(id) time0(time0) origine(time time1)
option origine() not allowed
r(198);

. stset time1, failure(bankrupt == 1) id(id) time0(time0) origin(time time1)

                id:  id
     failure event:  bankrupt == 1
obs. time interval:  (time0, time1]
 exit on or before:  failure
    t for analysis:  (time-origin)
            origin:  time time1

------------------------------------------------------------------------------
      4,423  total observations
      2,114  entry time missing (time0>=.)                      PROBABLE ERROR
------------------------------------------------------------------------------
      2,309  observations remaining, representing
      1,390  subjects
        131  failures in single-failure-per-subject data
  2,566,703  total analysis time at risk and under observation
                                                at risk from t =         0
                                     earliest observed entry t =         0
                                          last observed exit t =     2,191

. stset time1, failure(bankrupt == 1) id(id) time0(time0) origin(annee_creation)

                id:  id
     failure event:  bankrupt == 1
obs. time interval:  (time0, time1]
 exit on or before:  failure
    t for analysis:  (time-origin)
            origin:  time annee_creation

------------------------------------------------------------------------------
      4,423  total observations
      2,114  entry time missing (time0>=.)                      PROBABLE ERROR
------------------------------------------------------------------------------
      2,309  observations remaining, representing
      1,390  subjects
        131  failures in single-failure-per-subject data
  2,566,703  total analysis time at risk and under observation
                                                at risk from t =         0
                                     earliest observed entry t =    14,796
                                          last observed exit t =    17,111

. stset time1, failure(bankrupt == 1) id(id) time0(time0) origin(annee_creation)exit 
> (annee_raditation)
variable annee_raditation not found
r(111);

. stset time1, failure(bankrupt == 1) id(id) time0(time0) origin(annee_creation)exit 
> (annee_radiation)

                id:  id
     failure event:  bankrupt == 1
obs. time interval:  (time0, time1]
 exit on or before:  time annee_radiation
    t for analysis:  (time-origin)
            origin:  time annee_creation

------------------------------------------------------------------------------
      4,423  total observations
      2,114  entry time missing (time0>=.)                      PROBABLE ERROR
        182  observations begin on or after exit
------------------------------------------------------------------------------
      2,127  observations remaining, representing
      1,230  subjects
          0  failures in single-failure-per-subject data
  2,367,261  total analysis time at risk and under observation
                                                at risk from t =         0
                                     earliest observed entry t =    14,796
                                          last observed exit t =    17,111

. string year
command string is unrecognized
r(199);

. destring year
must specify either generate or replace option
r(198);

. destring year, reaplce
option reaplce not allowed
r(198);

. destring year, replace
year: all characters numeric; replaced as int
(2114 missing values generated)

